/**
 * @file
 * Overide the resource multipage css
 */
/* BOOTSTRAP CUSTOM VARIABLES
------------------------------------------------------------------------*/
/* VARIABLES
------------------------------------------------------------------------*/
/**
 * @file
 * Global Variables
 */
/* Custom typography settings for prose (See _prose.scss for explanation). */
/* Establish custom spacing variables based on line height to facilitate vertical rhythm */
/* Black/white colour variables */
/* Brand visited & focused styles */
/* Brand border */
/**
 * Specify your site domain here. Used to override detection of off-site links
 * if a link has been created that uses the sites full absolute href. Removes the external
 * link icon.
*/
/* COMPASS
------------------------------------------------------------------------*/
/*
 * A partial implementation of the Ruby list functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb
 */
/*
 * A partial implementation of the Ruby constants functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb
 */
/*
 * A partial implementation of the Ruby display functions from Compass:
 * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb
 */
/* BOOTSTRAP (Just the components we need)
------------------------------------------------------------------------*/
/* BREAKPOINT
------------------------------------------------------------------------*/
/* GENERIC
------------------------------------------------------------------------*/
/**
 * @file
 * Custom mixins
 */
/* Intrinsic ratios (eg: Used by _responsive-ratio) */
/* Cross browser opacity */
/* Font smoothing */
/* Px to Em https://web-design-weekly.com/snippets/converts-pixels-to-ems-with-sass/ */
/* WebKit-style focus */
/* To handle long words and URLs */
/**
 * @file
 * Map Bootstrap breakpoints to nice mixins.
 */
/**
 * @file
 * OOCSS Helpers & BEM modifiers
 */
/* Useful within Display Suite for removing margin from headings. */
.has-no-margin-top,
.cover--success .node__date,
.node-type-resource-multipage-paged .pre-content .region .node__date {
  margin-top: 0 !important;
}

.has-no-margin {
  margin: 0 !important;
}

/**
 * https://github.com/twbs/bootstrap/pull/12679
 * Use in conjunction with .sr-only to only display content when it's focused.
 * Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
*/
.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}

/* Bootstrap gutter killer */
.no-gutter[class*='col-'] {
  padding-right: 0;
  padding-left: 0;
}

/**
  * See Bootstrap. http://getbootstrap.com/css/#type-lists. Repeated here
  * because it is a common 'helper'.
  * Remove the default list-style and left margin on list items
  * (immediate children only). This only applies to immediate children list
  * items, meaning you will need to add the class for any nested lists as well.
  */
/*.list-unstyled {}*/
/* More link */
.more-link {
  font-size: 18px;
  font-weight: 600;
}

.more-link:focus {
  outline-offset: 0;
}

/* Inline block helper */
.inline-block {
  display: inline-block;
  vertical-align: top;
}

/**
 * Responsive margin top OOCSS spacing helpers.
 * Ideally always using margin above your site building blocks for consistency.
 */
.has-margin-top-base,
.navigation--in-page,
.node-type-resource-multipage-paged .pre-content {
  margin-top: 0.722em;
}

@media (min-width: 992px) {
  .has-margin-top-base,
  .navigation--in-page,
  .node-type-resource-multipage-paged .pre-content {
    margin-top: 1.444em;
  }
}

.has-margin-top-and-half {
  margin-top: 1.444em;
}

@media (min-width: 992px) {
  .has-margin-top-and-half {
    margin-top: 2.166em;
  }
}

.has-margin-top-double {
  margin-top: 1.444em;
}

@media (min-width: 992px) {
  .has-margin-top-double {
    margin-top: 2.888em;
  }
}

.has-margin-top-triple {
  margin-top: 1.444em;
}

@media (min-width: 480px) {
  .has-margin-top-triple {
    margin-top: 2.888em;
  }
}

@media (min-width: 992px) {
  .has-margin-top-triple {
    margin-top: 4.332em;
  }
}

.has-margin-top-half {
  margin-top: 0.722em;
}

/**
 * Responsive padding top OOCSS spacing helpers.
 * If a border is required above your site building block then use padding instead.
 */
.has-padding-top-base {
  padding-top: 0.722em;
}

@media (min-width: 992px) {
  .has-padding-top-base {
    padding-top: 1.444em;
  }
}

.has-padding-top-and-half {
  padding-top: 1.444em;
}

@media (min-width: 992px) {
  .has-padding-top-and-half {
    padding-top: 2.166em;
  }
}

.has-padding-top-double {
  padding-top: 1.444em;
}

@media (min-width: 992px) {
  .has-padding-top-double {
    padding-top: 2.888em;
  }
}

.has-padding-top-triple {
  padding-top: 1.444em;
}

@media (min-width: 480px) {
  .has-padding-top-triple {
    padding-top: 2.888em;
  }
}

@media (min-width: 992px) {
  .has-padding-top-triple {
    padding-top: 4.332em;
  }
}

.has-padding-top-half {
  padding-top: 0.722em;
}

@media (min-width: 1200px) {
  .has-padding-left-one-col {
    padding-left: span(1 of 12);
  }
}

@media (min-width: 1200px) {
  .has-padding-right-one-col {
    padding-right: span(1 of 12);
  }
}

.has-border-top {
  border-top: 1px solid #e2e2e2;
}

.has-border-top-large {
  border-top: 1px solid #e2e2e2;
}

@media (min-width: 480px) {
  .has-border-top-large {
    border-top: 4px solid #e2e2e2;
  }
}

.has-border-top-largest {
  border-top: 10px solid #e2e2e2;
}

.has-border-top-largest-dark {
  border-top: 10px solid #555555;
}

.has-border-top-alternate {
  position: relative;
  padding-top: 1px;
}

.has-border-top-alternate:before {
  position: absolute;
  top: -2px;
  left: 0;
  content: '';
  width: 40px;
  height: 2px;
  background-color: #e2e2e2;
}

.has-no-border-top {
  border-top: none;
}

@media (min-width: 1200px) {
  .text-center-wide-and-up {
    text-align: center;
  }
}

/* Use to offset elements 'right' within main body area. */
.has-offset-right {
  position: relative;
}

@media (min-width: 1201px) and (max-width: 1259px) {
  .has-offset-right {
    margin-right: -80px !important;
  }
}

@media (min-width: 1360px) {
  .has-offset-right {
    margin-right: -120px !important;
  }
}

/* Use to offset elements 'left' within main body area. */
.has-offset-left {
  position: relative;
}

@media (min-width: 1201px) and (max-width: 1259px) {
  .has-offset-left {
    margin-left: -80px !important;
  }
}

@media (min-width: 1360px) {
  .has-offset-left {
    margin-left: -120px !important;
  }
}

/* Caption */
.caption {
  color: #595959;
  padding: 1.444em 0 0.361em;
  font-size: 85%;
  border-bottom: 1px solid #e2e2e2;
}

@media (min-width: 480px) {
  .caption {
    padding: 28px 0 7px;
  }
}

.caption:empty {
  display: none;
}

.link-down {
  position: relative;
  padding-left: 10px;
}

.link-down:before {
  content: '\2193';
  position: absolute;
  top: -3px;
  left: -1px;
}

/* To handle long words and URLs */
.dont-break-out {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

/* SPECIFIC
------------------------------------------------------------------------*/
/**
 * @file
 * BEM block for Action.
 */
.action--multipage-print {
  /* Hide if JS is turned off */
}

.no-js .action--multipage-print {
  display: none;
}

/**
 * @file
 * BEM block for Cover.
 */
.cover--success,
.node-type-resource-multipage-paged .pre-content .region {
  background-color: #00823b;
  padding: 1.444em 0.722em 1.444em 0.722em;
}

@media (min-width: 480px) {
  .cover--success,
  .node-type-resource-multipage-paged .pre-content .region {
    padding: 1.444em 1.444em 2.888em 1.444em;
  }
}

@media (min-width: 1200px) {
  .cover--success,
  .node-type-resource-multipage-paged .pre-content .region {
    padding: 4.332em 2.166em 2.888em 2.166em;
  }
}

.cover--success p,
.cover--success h1,
.cover--success h5,
.cover--success .node__date,
.cover--success .node__term,
.cover--success .field,
.cover--success .field-label,
.cover--success .link-down, .node-type-resource-multipage-paged .pre-content .region p, .node-type-resource-multipage-paged .pre-content .region h1, .node-type-resource-multipage-paged .pre-content .region h5, .node-type-resource-multipage-paged .pre-content .region .node__date, .node-type-resource-multipage-paged .pre-content .region .node__term, .node-type-resource-multipage-paged .pre-content .region .field, .node-type-resource-multipage-paged .pre-content .region .field-label, .node-type-resource-multipage-paged .pre-content .region .link-down {
  color: #ffffff;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media (min-width: 480px) {
  .cover--success .field, .node-type-resource-multipage-paged .pre-content .region .field {
    line-height: 1.611;
  }
}

.cover--success .field a, .node-type-resource-multipage-paged .pre-content .region .field a {
  color: #ffffff;
  text-decoration: underline;
}

.cover--success .node__title, .node-type-resource-multipage-paged .pre-content .region .node__title {
  margin-bottom: 1.444em;
}

@media (min-width: 992px) {
  .cover--success .node__title, .node-type-resource-multipage-paged .pre-content .region .node__title {
    margin-bottom: 2.888em;
  }
}

@media (min-width: 1200px) {
  .cover--success .node__title, .node-type-resource-multipage-paged .pre-content .region .node__title {
    padding-right: 11.552em;
  }
}

.cover--success .node__term, .node-type-resource-multipage-paged .pre-content .region .node__term {
  margin-bottom: 5px;
}

.cover--success .field-name-field-issue-date .field-label,
.cover--success .field-name-field-version-statement .field-label,
.cover--success .field-name-field-copyright-license .field-label,
.cover--success .field-name-copyright-link .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-issue-date .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-version-statement .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-copyright-license .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-copyright-link .field-label {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin-top: 0.722em;
}

@media (min-width: 480px) {
  .cover--success .field-name-field-issue-date .field-label,
  .cover--success .field-name-field-version-statement .field-label,
  .cover--success .field-name-field-copyright-license .field-label,
  .cover--success .field-name-copyright-link .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-issue-date .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-version-statement .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-copyright-license .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-copyright-link .field-label {
    width: 25%;
    margin-right: 2%;
    margin-top: 0;
  }
}

@media (min-width: 992px) {
  .cover--success .field-name-field-issue-date .field-label,
  .cover--success .field-name-field-version-statement .field-label,
  .cover--success .field-name-field-copyright-license .field-label,
  .cover--success .field-name-copyright-link .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-issue-date .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-version-statement .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-field-copyright-license .field-label, .node-type-resource-multipage-paged .pre-content .region .field-name-copyright-link .field-label {
    width: 18%;
  }
}

.cover--success .field-name-field-issue-date .field-items,
.cover--success .field-name-field-version-statement .field-items,
.cover--success .field-name-field-copyright-license .field-items,
.cover--success .field-name-copyright-link .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-issue-date .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-version-statement .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-copyright-license .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-copyright-link .field-items {
  clear: both;
}

@media (min-width: 480px) {
  .cover--success .field-name-field-issue-date .field-items,
  .cover--success .field-name-field-version-statement .field-items,
  .cover--success .field-name-field-copyright-license .field-items,
  .cover--success .field-name-copyright-link .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-issue-date .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-version-statement .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-copyright-license .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-copyright-link .field-items {
    clear: none;
    width: 73%;
  }
}

@media (min-width: 992px) {
  .cover--success .field-name-field-issue-date .field-items,
  .cover--success .field-name-field-version-statement .field-items,
  .cover--success .field-name-field-copyright-license .field-items,
  .cover--success .field-name-copyright-link .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-issue-date .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-version-statement .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-field-copyright-license .field-items, .node-type-resource-multipage-paged .pre-content .region .field-name-copyright-link .field-items {
    width: 80%;
  }
}

/**
 * @file
 * BEM block for Multipage.
 */
@-webkit-keyframes highlight {
  from {
    background: rgba(255, 255, 0, 0.1);
  }
  to {
    background: rgba(255, 255, 0, 0.3);
  }
}
@keyframes highlight {
  from {
    background: rgba(255, 255, 0, 0.1);
  }
  to {
    background: rgba(255, 255, 0, 0.3);
  }
}

.multipage__section > h2 {
  /* Animate to illustrate arrival at section when interacting via the pager */
  -webkit-animation: highlight 1s ease;
          animation: highlight 1s ease;
}

/**
 * @file
 * BEM block for Navigation.
 */
/* In page table of contents */
.navigation--in-page > h5 {
  margin-bottom: 1.444em;
}

.navigation--in-page > ol {
  counter-reset: ordered-list;
  line-height: 1.444;
}

.navigation--in-page > ol > li {
  display: block;
  margin: -3px 0 0 0;
  padding: 0 0 10px 0;
  max-height: 100px;
  overflow: hidden;
  position: relative;
}

.navigation--in-page > ol > li.active ~ li:before {
  background: #CCCCCC;
}

.navigation--in-page > ol > li.active ~ li a:before {
  background: #CCCCCC;
}

.navigation--in-page > ol > li.active ~ li a:after {
  background: #CCCCCC;
}

.navigation--in-page > ol > li.active a {
  color: #111212;
  text-decoration: underline;
}

.navigation--in-page > ol > li:before {
  background: #111212;
  content: '';
  display: block;
  height: 110%;
  left: 8px;
  position: absolute;
  speak: none;
  top: 9px;
  width: 2px;
}

.navigation--in-page > ol > li:last-child:before {
  display: none;
}

.navigation--in-page > ol > li > a {
  display: block;
  padding: 0 0 0 30px;
  font-weight: 600;
  line-height: 20px;
}

.navigation--in-page > ol > li > a:focus {
  outline-offset: 0;
}

.navigation--in-page > ol > li > a:after {
  background: #111212;
  border-radius: 50%;
  content: '';
  display: inline-block;
  height: 14px;
  left: 2px;
  position: absolute;
  top: 2px;
  width: 14px;
}

/**
 * @file
 * BEM block for Promotion.
 */
.site__sidebar-inner .promotion--multipage-actions {
  border-top: none;
}

@media (max-width: 1199px) {
  .site__sidebar-inner .promotion--multipage-actions:first-child {
    margin-top: 1.444em;
  }
}

.promotion--multipage-actions .action,
.promotion--multipage-actions .action--multipage-print {
  margin-top: 0.722em;
  display: block;
}

@media (min-width: 480px) {
  .promotion--multipage-actions .action,
  .promotion--multipage-actions .action--multipage-print {
    margin-top: 0;
    display: inline;
  }
}

@media (min-width: 992px) {
  .promotion--multipage-actions .action--multipage-print {
    margin-top: 0.722em;
    display: inline-block;
  }
}

/**
 * @file
 * BEM block for pre-content.
 */
/**
 * @file
 * BEM block for Site.
 */
@media (min-width: 1200px) {
  .you-are-going-down-on-a-multipage .site__sidebar-inner {
    position: fixed;
    top: 0;
    width: 280px;
    background-color: #ffffff;
    padding-top: 50px;
    margin-top: -30px;
    overflow: auto;
    max-height: 100%;
  }
}

@media (min-width: 1200px) {
  .you-are-near-the-bottom-on-a-multipage .site__sidebar-inner {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/**
 * @file
 * Responsive layout (Modular utility grid)
 */

/**
 * Naming convention for grid modifiers. For example:
 * .responsive-layout--t2 translates to layout of 2 columns for tablet large and up breakpoint ('t' for tablet-large)
 * .responsive-layout--d3 translates to layout of 3 columns for desktop and up ('d' for desktop).
 * .responsive-layout--w4 translates to layout of 4 columns for wide and up ('w' for wide).
 *
 * Intention is to use any combination of these modifiers to achieve desired grid configuration.
 *
 * For example:
 *
 * <div class="responsive-layout responsive-layout--t2 responsive-layout--w4">
 *    <div class="responsive-layout__item"> ... </div>
 *    <div class="responsive-layout__item"> ... </div>
 *    <div class="responsive-layout__item"> ... </div>
 *    <div class="responsive-layout__item"> ... </div>
 * </div>
 *
 * By default, without any modifiers, the .responsive-layout component will squash all child
 * .responsive-layout__item elements into the same row, without any wrapping.
 */


.responsive-layout,
%responsive-layout {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  margin-left: $responsive-layout-gutter * -1;
  margin-right: $responsive-layout-gutter * -1;
  > .responsive-layout__item,
  > %responsive-layout__item {
    @include apply-gutter;
    ~ .responsive-layout__item,
    ~ %responsive-layout__item {
      margin-top: $spacing-base;
    }
  }
  @include respond-to(tablet-large-and-up) {
    flex-direction: row;
    > .responsive-layout__item,
    > %responsive-layout__item {
      flex: 1;
      ~ .responsive-layout__item,
      ~ %responsive-layout__item {
        margin-top: 0;
      }
    }
  }
}

@each $breakpoint, $cols in $responsive-layout-variants {
  $first-character: str-slice($breakpoint, 0, 1);
  $breakpoint: #{$breakpoint}-and-up;
  @each $col in $cols {
    .responsive-layout.responsive-layout--#{$first-character}#{$col},
    %responsive-layout--#{$first-character}#{$col} {
      @include respond-to(#{$breakpoint}){
        flex-wrap: wrap;
        > .responsive-layout__item {
          width: (100% / $col);
          flex: none;
          margin-top: $spacing-base;
          &:nth-child(-n+#{$col}){
            margin-top: 0;
          }
        }
      }
    }
  }
}
